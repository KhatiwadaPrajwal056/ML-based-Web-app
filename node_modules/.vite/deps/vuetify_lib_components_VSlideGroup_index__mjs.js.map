{
  "version": 3,
  "sources": ["../../vuetify/src/components/VSlideGroup/VSlideGroupItem.tsx"],
  "sourcesContent": ["// Composables\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\n\n// Utilities\nimport { VSlideGroupSymbol } from './VSlideGroup'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { UnwrapRef } from 'vue'\nimport type { GroupItemProvide } from '@/composables/group'\n\ntype VSlideGroupItemSlots = {\n  default: {\n    isSelected: UnwrapRef<GroupItemProvide['isSelected']>\n    select: GroupItemProvide['select']\n    toggle: GroupItemProvide['toggle']\n    selectedClass: UnwrapRef<GroupItemProvide['selectedClass']>\n  }\n}\n\nexport const VSlideGroupItem = genericComponent<VSlideGroupItemSlots>()({\n  name: 'VSlideGroupItem',\n\n  props: makeGroupItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const slideGroupItem = useGroupItem(props, VSlideGroupSymbol)\n\n    return () => slots.default?.({\n      isSelected: slideGroupItem.isSelected.value,\n      select: slideGroupItem.select,\n      toggle: slideGroupItem.toggle,\n      selectedClass: slideGroupItem.selectedClass.value,\n    })\n  },\n})\n\nexport type VSlideGroupItem = InstanceType<typeof VSlideGroupItem>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAoBO,IAAMA,kBAAkBC,iBAAgB,EAAyB;EACtEC,MAAM;EAENC,OAAOC,mBAAkB;EAEzBC,OAAO;IACL,kBAAmBC,SAA4B;EACjD;EAEAC,MAAOJ,OAAKK,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrB,UAAME,iBAAiBC,aAAaR,OAAOS,iBAAiB;AAE5D,WAAO,MAAA;AAhCX;AAgCiBH,yBAAMI,YAANJ,+BAAgB;QAC3BK,YAAYJ,eAAeI,WAAWC;QACtCC,QAAQN,eAAeM;QACvBC,QAAQP,eAAeO;QACvBC,eAAeR,eAAeQ,cAAcH;MAC9C;;EACF;AACF,CAAC;",
  "names": ["VSlideGroupItem", "genericComponent", "name", "props", "makeGroupItemProps", "emits", "val", "setup", "_ref", "slots", "slideGroupItem", "useGroupItem", "VSlideGroupSymbol", "default", "isSelected", "value", "select", "toggle", "selectedClass"]
}
