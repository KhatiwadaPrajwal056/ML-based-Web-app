import { RekognitionServiceException as __BaseException } from "./RekognitionServiceException";
export const UnsearchedFaceReason = {
    EXCEEDS_MAX_FACES: "EXCEEDS_MAX_FACES",
    EXTREME_POSE: "EXTREME_POSE",
    FACE_NOT_LARGEST: "FACE_NOT_LARGEST",
    LOW_BRIGHTNESS: "LOW_BRIGHTNESS",
    LOW_CONFIDENCE: "LOW_CONFIDENCE",
    LOW_FACE_QUALITY: "LOW_FACE_QUALITY",
    LOW_SHARPNESS: "LOW_SHARPNESS",
    SMALL_BOUNDING_BOX: "SMALL_BOUNDING_BOX",
};
export class VideoTooLargeException extends __BaseException {
    constructor(opts) {
        super({
            name: "VideoTooLargeException",
            $fault: "client",
            ...opts,
        });
        this.name = "VideoTooLargeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, VideoTooLargeException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export const StreamProcessorParameterToDelete = {
    ConnectedHomeMinConfidence: "ConnectedHomeMinConfidence",
    RegionsOfInterest: "RegionsOfInterest",
};
