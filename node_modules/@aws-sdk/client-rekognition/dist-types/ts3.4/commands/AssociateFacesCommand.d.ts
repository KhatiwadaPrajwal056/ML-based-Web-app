import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  AssociateFacesRequest,
  AssociateFacesResponse,
} from "../models/models_0";
import {
  RekognitionClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../RekognitionClient";
export { __MetadataBearer, $Command };
export interface AssociateFacesCommandInput extends AssociateFacesRequest {}
export interface AssociateFacesCommandOutput
  extends AssociateFacesResponse,
    __MetadataBearer {}
export declare class AssociateFacesCommand extends $Command<
  AssociateFacesCommandInput,
  AssociateFacesCommandOutput,
  RekognitionClientResolvedConfig
> {
  readonly input: AssociateFacesCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: AssociateFacesCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: RekognitionClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<AssociateFacesCommandInput, AssociateFacesCommandOutput>;
  private serialize;
  private deserialize;
}
