import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  GetFaceLivenessSessionResultsRequest,
  GetFaceLivenessSessionResultsResponse,
} from "../models/models_0";
import {
  RekognitionClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../RekognitionClient";
export { __MetadataBearer, $Command };
export interface GetFaceLivenessSessionResultsCommandInput
  extends GetFaceLivenessSessionResultsRequest {}
export interface GetFaceLivenessSessionResultsCommandOutput
  extends GetFaceLivenessSessionResultsResponse,
    __MetadataBearer {}
export declare class GetFaceLivenessSessionResultsCommand extends $Command<
  GetFaceLivenessSessionResultsCommandInput,
  GetFaceLivenessSessionResultsCommandOutput,
  RekognitionClientResolvedConfig
> {
  readonly input: GetFaceLivenessSessionResultsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetFaceLivenessSessionResultsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: RekognitionClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    GetFaceLivenessSessionResultsCommandInput,
    GetFaceLivenessSessionResultsCommandOutput
  >;
  private serialize;
  private deserialize;
}
