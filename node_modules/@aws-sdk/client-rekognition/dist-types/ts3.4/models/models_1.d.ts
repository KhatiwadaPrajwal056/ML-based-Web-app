import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import {
  BlackFrame,
  BoundingBox,
  Celebrity,
  ComparedFace,
  ConnectedHomeSettingsForUpdate,
  DatasetChanges,
  DetectionFilter,
  FaceAttributes,
  FaceDetail,
  FaceMatch,
  Image,
  KinesisVideoStreamStartSelector,
  LabelDetectionFeatureName,
  LabelDetectionSettings,
  MatchedUser,
  MediaAnalysisInput,
  MediaAnalysisOperationsConfig,
  MediaAnalysisOutputConfig,
  NotificationChannel,
  OrientationCorrection,
  ProjectVersionStatus,
  QualityFilter,
  RegionOfInterest,
  SegmentType,
  StreamProcessorDataSharingPreference,
  Video,
} from "./models_0";
import { RekognitionServiceException as __BaseException } from "./RekognitionServiceException";
export interface PutProjectPolicyRequest {
  ProjectArn: string | undefined;
  PolicyName: string | undefined;
  PolicyRevisionId?: string;
  PolicyDocument: string | undefined;
}
export interface PutProjectPolicyResponse {
  PolicyRevisionId?: string;
}
export interface RecognizeCelebritiesRequest {
  Image: Image | undefined;
}
export interface RecognizeCelebritiesResponse {
  CelebrityFaces?: Celebrity[];
  UnrecognizedFaces?: ComparedFace[];
  OrientationCorrection?: OrientationCorrection;
}
export interface SearchFacesRequest {
  CollectionId: string | undefined;
  FaceId: string | undefined;
  MaxFaces?: number;
  FaceMatchThreshold?: number;
}
export interface SearchFacesResponse {
  SearchedFaceId?: string;
  FaceMatches?: FaceMatch[];
  FaceModelVersion?: string;
}
export interface SearchFacesByImageRequest {
  CollectionId: string | undefined;
  Image: Image | undefined;
  MaxFaces?: number;
  FaceMatchThreshold?: number;
  QualityFilter?: QualityFilter;
}
export interface SearchFacesByImageResponse {
  SearchedFaceBoundingBox?: BoundingBox;
  SearchedFaceConfidence?: number;
  FaceMatches?: FaceMatch[];
  FaceModelVersion?: string;
}
export interface SearchUsersRequest {
  CollectionId: string | undefined;
  UserId?: string;
  FaceId?: string;
  UserMatchThreshold?: number;
  MaxUsers?: number;
}
export interface SearchedFace {
  FaceId?: string;
}
export interface SearchedUser {
  UserId?: string;
}
export interface UserMatch {
  Similarity?: number;
  User?: MatchedUser;
}
export interface SearchUsersResponse {
  UserMatches?: UserMatch[];
  FaceModelVersion?: string;
  SearchedFace?: SearchedFace;
  SearchedUser?: SearchedUser;
}
export interface SearchUsersByImageRequest {
  CollectionId: string | undefined;
  Image: Image | undefined;
  UserMatchThreshold?: number;
  MaxUsers?: number;
  QualityFilter?: QualityFilter;
}
export interface SearchedFaceDetails {
  FaceDetail?: FaceDetail;
}
export declare const UnsearchedFaceReason: {
  readonly EXCEEDS_MAX_FACES: "EXCEEDS_MAX_FACES";
  readonly EXTREME_POSE: "EXTREME_POSE";
  readonly FACE_NOT_LARGEST: "FACE_NOT_LARGEST";
  readonly LOW_BRIGHTNESS: "LOW_BRIGHTNESS";
  readonly LOW_CONFIDENCE: "LOW_CONFIDENCE";
  readonly LOW_FACE_QUALITY: "LOW_FACE_QUALITY";
  readonly LOW_SHARPNESS: "LOW_SHARPNESS";
  readonly SMALL_BOUNDING_BOX: "SMALL_BOUNDING_BOX";
};
export type UnsearchedFaceReason =
  (typeof UnsearchedFaceReason)[keyof typeof UnsearchedFaceReason];
export interface UnsearchedFace {
  FaceDetails?: FaceDetail;
  Reasons?: UnsearchedFaceReason[];
}
export interface SearchUsersByImageResponse {
  UserMatches?: UserMatch[];
  FaceModelVersion?: string;
  SearchedFace?: SearchedFaceDetails;
  UnsearchedFaces?: UnsearchedFace[];
}
export interface StartCelebrityRecognitionRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
}
export interface StartCelebrityRecognitionResponse {
  JobId?: string;
}
export declare class VideoTooLargeException extends __BaseException {
  readonly name: "VideoTooLargeException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<VideoTooLargeException, __BaseException>
  );
}
export interface StartContentModerationRequest {
  Video: Video | undefined;
  MinConfidence?: number;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
}
export interface StartContentModerationResponse {
  JobId?: string;
}
export interface StartFaceDetectionRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  FaceAttributes?: FaceAttributes;
  JobTag?: string;
}
export interface StartFaceDetectionResponse {
  JobId?: string;
}
export interface StartFaceSearchRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  FaceMatchThreshold?: number;
  CollectionId: string | undefined;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
}
export interface StartFaceSearchResponse {
  JobId?: string;
}
export interface StartLabelDetectionRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  MinConfidence?: number;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
  Features?: LabelDetectionFeatureName[];
  Settings?: LabelDetectionSettings;
}
export interface StartLabelDetectionResponse {
  JobId?: string;
}
export interface StartMediaAnalysisJobRequest {
  ClientRequestToken?: string;
  JobName?: string;
  OperationsConfig: MediaAnalysisOperationsConfig | undefined;
  Input: MediaAnalysisInput | undefined;
  OutputConfig: MediaAnalysisOutputConfig | undefined;
  KmsKeyId?: string;
}
export interface StartMediaAnalysisJobResponse {
  JobId: string | undefined;
}
export interface StartPersonTrackingRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
}
export interface StartPersonTrackingResponse {
  JobId?: string;
}
export interface StartProjectVersionRequest {
  ProjectVersionArn: string | undefined;
  MinInferenceUnits: number | undefined;
  MaxInferenceUnits?: number;
}
export interface StartProjectVersionResponse {
  Status?: ProjectVersionStatus;
}
export interface StartShotDetectionFilter {
  MinSegmentConfidence?: number;
}
export interface StartTechnicalCueDetectionFilter {
  MinSegmentConfidence?: number;
  BlackFrame?: BlackFrame;
}
export interface StartSegmentDetectionFilters {
  TechnicalCueFilter?: StartTechnicalCueDetectionFilter;
  ShotFilter?: StartShotDetectionFilter;
}
export interface StartSegmentDetectionRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
  Filters?: StartSegmentDetectionFilters;
  SegmentTypes: SegmentType[] | undefined;
}
export interface StartSegmentDetectionResponse {
  JobId?: string;
}
export interface StreamProcessingStartSelector {
  KVSStreamStartSelector?: KinesisVideoStreamStartSelector;
}
export interface StreamProcessingStopSelector {
  MaxDurationInSeconds?: number;
}
export interface StartStreamProcessorRequest {
  Name: string | undefined;
  StartSelector?: StreamProcessingStartSelector;
  StopSelector?: StreamProcessingStopSelector;
}
export interface StartStreamProcessorResponse {
  SessionId?: string;
}
export interface StartTextDetectionFilters {
  WordFilter?: DetectionFilter;
  RegionsOfInterest?: RegionOfInterest[];
}
export interface StartTextDetectionRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
  Filters?: StartTextDetectionFilters;
}
export interface StartTextDetectionResponse {
  JobId?: string;
}
export interface StopProjectVersionRequest {
  ProjectVersionArn: string | undefined;
}
export interface StopProjectVersionResponse {
  Status?: ProjectVersionStatus;
}
export interface StopStreamProcessorRequest {
  Name: string | undefined;
}
export interface StopStreamProcessorResponse {}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateDatasetEntriesRequest {
  DatasetArn: string | undefined;
  Changes: DatasetChanges | undefined;
}
export interface UpdateDatasetEntriesResponse {}
export declare const StreamProcessorParameterToDelete: {
  readonly ConnectedHomeMinConfidence: "ConnectedHomeMinConfidence";
  readonly RegionsOfInterest: "RegionsOfInterest";
};
export type StreamProcessorParameterToDelete =
  (typeof StreamProcessorParameterToDelete)[keyof typeof StreamProcessorParameterToDelete];
export interface StreamProcessorSettingsForUpdate {
  ConnectedHomeForUpdate?: ConnectedHomeSettingsForUpdate;
}
export interface UpdateStreamProcessorRequest {
  Name: string | undefined;
  SettingsForUpdate?: StreamProcessorSettingsForUpdate;
  RegionsOfInterestForUpdate?: RegionOfInterest[];
  DataSharingPreferenceForUpdate?: StreamProcessorDataSharingPreference;
  ParametersToDelete?: StreamProcessorParameterToDelete[];
}
export interface UpdateStreamProcessorResponse {}
