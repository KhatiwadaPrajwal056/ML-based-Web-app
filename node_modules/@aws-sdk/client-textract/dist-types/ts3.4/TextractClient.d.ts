import {
  HostHeaderInputConfig,
  HostHeaderResolvedConfig,
} from "@aws-sdk/middleware-host-header";
import {
  AwsAuthInputConfig,
  AwsAuthResolvedConfig,
} from "@aws-sdk/middleware-signing";
import {
  UserAgentInputConfig,
  UserAgentResolvedConfig,
} from "@aws-sdk/middleware-user-agent";
import { Credentials as __Credentials } from "@aws-sdk/types";
import {
  RegionInputConfig,
  RegionResolvedConfig,
} from "@smithy/config-resolver";
import {
  EndpointInputConfig,
  EndpointResolvedConfig,
} from "@smithy/middleware-endpoint";
import {
  RetryInputConfig,
  RetryResolvedConfig,
} from "@smithy/middleware-retry";
import { HttpHandler as __HttpHandler } from "@smithy/protocol-http";
import {
  Client as __Client,
  DefaultsMode as __DefaultsMode,
  SmithyConfiguration as __SmithyConfiguration,
  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,
} from "@smithy/smithy-client";
import {
  BodyLengthCalculator as __BodyLengthCalculator,
  CheckOptionalClientConfig as __CheckOptionalClientConfig,
  ChecksumConstructor as __ChecksumConstructor,
  Decoder as __Decoder,
  Encoder as __Encoder,
  HashConstructor as __HashConstructor,
  HttpHandlerOptions as __HttpHandlerOptions,
  Logger as __Logger,
  Provider as __Provider,
  Provider,
  StreamCollector as __StreamCollector,
  UrlParser as __UrlParser,
  UserAgent as __UserAgent,
} from "@smithy/types";
import {
  AnalyzeDocumentCommandInput,
  AnalyzeDocumentCommandOutput,
} from "./commands/AnalyzeDocumentCommand";
import {
  AnalyzeExpenseCommandInput,
  AnalyzeExpenseCommandOutput,
} from "./commands/AnalyzeExpenseCommand";
import {
  AnalyzeIDCommandInput,
  AnalyzeIDCommandOutput,
} from "./commands/AnalyzeIDCommand";
import {
  CreateAdapterCommandInput,
  CreateAdapterCommandOutput,
} from "./commands/CreateAdapterCommand";
import {
  CreateAdapterVersionCommandInput,
  CreateAdapterVersionCommandOutput,
} from "./commands/CreateAdapterVersionCommand";
import {
  DeleteAdapterCommandInput,
  DeleteAdapterCommandOutput,
} from "./commands/DeleteAdapterCommand";
import {
  DeleteAdapterVersionCommandInput,
  DeleteAdapterVersionCommandOutput,
} from "./commands/DeleteAdapterVersionCommand";
import {
  DetectDocumentTextCommandInput,
  DetectDocumentTextCommandOutput,
} from "./commands/DetectDocumentTextCommand";
import {
  GetAdapterCommandInput,
  GetAdapterCommandOutput,
} from "./commands/GetAdapterCommand";
import {
  GetAdapterVersionCommandInput,
  GetAdapterVersionCommandOutput,
} from "./commands/GetAdapterVersionCommand";
import {
  GetDocumentAnalysisCommandInput,
  GetDocumentAnalysisCommandOutput,
} from "./commands/GetDocumentAnalysisCommand";
import {
  GetDocumentTextDetectionCommandInput,
  GetDocumentTextDetectionCommandOutput,
} from "./commands/GetDocumentTextDetectionCommand";
import {
  GetExpenseAnalysisCommandInput,
  GetExpenseAnalysisCommandOutput,
} from "./commands/GetExpenseAnalysisCommand";
import {
  GetLendingAnalysisCommandInput,
  GetLendingAnalysisCommandOutput,
} from "./commands/GetLendingAnalysisCommand";
import {
  GetLendingAnalysisSummaryCommandInput,
  GetLendingAnalysisSummaryCommandOutput,
} from "./commands/GetLendingAnalysisSummaryCommand";
import {
  ListAdaptersCommandInput,
  ListAdaptersCommandOutput,
} from "./commands/ListAdaptersCommand";
import {
  ListAdapterVersionsCommandInput,
  ListAdapterVersionsCommandOutput,
} from "./commands/ListAdapterVersionsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  StartDocumentAnalysisCommandInput,
  StartDocumentAnalysisCommandOutput,
} from "./commands/StartDocumentAnalysisCommand";
import {
  StartDocumentTextDetectionCommandInput,
  StartDocumentTextDetectionCommandOutput,
} from "./commands/StartDocumentTextDetectionCommand";
import {
  StartExpenseAnalysisCommandInput,
  StartExpenseAnalysisCommandOutput,
} from "./commands/StartExpenseAnalysisCommand";
import {
  StartLendingAnalysisCommandInput,
  StartLendingAnalysisCommandOutput,
} from "./commands/StartLendingAnalysisCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateAdapterCommandInput,
  UpdateAdapterCommandOutput,
} from "./commands/UpdateAdapterCommand";
import {
  ClientInputEndpointParameters,
  ClientResolvedEndpointParameters,
  EndpointParameters,
} from "./endpoint/EndpointParameters";
import { RuntimeExtension, RuntimeExtensionsConfig } from "./runtimeExtensions";
export { __Client };
export type ServiceInputTypes =
  | AnalyzeDocumentCommandInput
  | AnalyzeExpenseCommandInput
  | AnalyzeIDCommandInput
  | CreateAdapterCommandInput
  | CreateAdapterVersionCommandInput
  | DeleteAdapterCommandInput
  | DeleteAdapterVersionCommandInput
  | DetectDocumentTextCommandInput
  | GetAdapterCommandInput
  | GetAdapterVersionCommandInput
  | GetDocumentAnalysisCommandInput
  | GetDocumentTextDetectionCommandInput
  | GetExpenseAnalysisCommandInput
  | GetLendingAnalysisCommandInput
  | GetLendingAnalysisSummaryCommandInput
  | ListAdapterVersionsCommandInput
  | ListAdaptersCommandInput
  | ListTagsForResourceCommandInput
  | StartDocumentAnalysisCommandInput
  | StartDocumentTextDetectionCommandInput
  | StartExpenseAnalysisCommandInput
  | StartLendingAnalysisCommandInput
  | TagResourceCommandInput
  | UntagResourceCommandInput
  | UpdateAdapterCommandInput;
export type ServiceOutputTypes =
  | AnalyzeDocumentCommandOutput
  | AnalyzeExpenseCommandOutput
  | AnalyzeIDCommandOutput
  | CreateAdapterCommandOutput
  | CreateAdapterVersionCommandOutput
  | DeleteAdapterCommandOutput
  | DeleteAdapterVersionCommandOutput
  | DetectDocumentTextCommandOutput
  | GetAdapterCommandOutput
  | GetAdapterVersionCommandOutput
  | GetDocumentAnalysisCommandOutput
  | GetDocumentTextDetectionCommandOutput
  | GetExpenseAnalysisCommandOutput
  | GetLendingAnalysisCommandOutput
  | GetLendingAnalysisSummaryCommandOutput
  | ListAdapterVersionsCommandOutput
  | ListAdaptersCommandOutput
  | ListTagsForResourceCommandOutput
  | StartDocumentAnalysisCommandOutput
  | StartDocumentTextDetectionCommandOutput
  | StartExpenseAnalysisCommandOutput
  | StartLendingAnalysisCommandOutput
  | TagResourceCommandOutput
  | UntagResourceCommandOutput
  | UpdateAdapterCommandOutput;
export interface ClientDefaults
  extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
  requestHandler?: __HttpHandler;
  sha256?: __ChecksumConstructor | __HashConstructor;
  urlParser?: __UrlParser;
  bodyLengthChecker?: __BodyLengthCalculator;
  streamCollector?: __StreamCollector;
  base64Decoder?: __Decoder;
  base64Encoder?: __Encoder;
  utf8Decoder?: __Decoder;
  utf8Encoder?: __Encoder;
  runtime?: string;
  disableHostPrefix?: boolean;
  serviceId?: string;
  useDualstackEndpoint?: boolean | __Provider<boolean>;
  useFipsEndpoint?: boolean | __Provider<boolean>;
  region?: string | __Provider<string>;
  credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
  defaultUserAgentProvider?: Provider<__UserAgent>;
  maxAttempts?: number | __Provider<number>;
  retryMode?: string | __Provider<string>;
  logger?: __Logger;
  extensions?: RuntimeExtension[];
  defaultsMode?: __DefaultsMode | __Provider<__DefaultsMode>;
}
export type TextractClientConfigType = Partial<
  __SmithyConfiguration<__HttpHandlerOptions>
> &
  ClientDefaults &
  RegionInputConfig &
  EndpointInputConfig<EndpointParameters> &
  RetryInputConfig &
  HostHeaderInputConfig &
  AwsAuthInputConfig &
  UserAgentInputConfig &
  ClientInputEndpointParameters;
export interface TextractClientConfig extends TextractClientConfigType {}
export type TextractClientResolvedConfigType =
  __SmithyResolvedConfiguration<__HttpHandlerOptions> &
    Required<ClientDefaults> &
    RuntimeExtensionsConfig &
    RegionResolvedConfig &
    EndpointResolvedConfig<EndpointParameters> &
    RetryResolvedConfig &
    HostHeaderResolvedConfig &
    AwsAuthResolvedConfig &
    UserAgentResolvedConfig &
    ClientResolvedEndpointParameters;
export interface TextractClientResolvedConfig
  extends TextractClientResolvedConfigType {}
export declare class TextractClient extends __Client<
  __HttpHandlerOptions,
  ServiceInputTypes,
  ServiceOutputTypes,
  TextractClientResolvedConfig
> {
  readonly config: TextractClientResolvedConfig;
  constructor(
    ...[configuration]: __CheckOptionalClientConfig<TextractClientConfig>
  );
  destroy(): void;
}
