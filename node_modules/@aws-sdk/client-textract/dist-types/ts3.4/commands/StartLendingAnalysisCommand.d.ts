import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  StartLendingAnalysisRequest,
  StartLendingAnalysisResponse,
} from "../models/models_0";
import {
  ServiceInputTypes,
  ServiceOutputTypes,
  TextractClientResolvedConfig,
} from "../TextractClient";
export { __MetadataBearer, $Command };
export interface StartLendingAnalysisCommandInput
  extends StartLendingAnalysisRequest {}
export interface StartLendingAnalysisCommandOutput
  extends StartLendingAnalysisResponse,
    __MetadataBearer {}
export declare class StartLendingAnalysisCommand extends $Command<
  StartLendingAnalysisCommandInput,
  StartLendingAnalysisCommandOutput,
  TextractClientResolvedConfig
> {
  readonly input: StartLendingAnalysisCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: StartLendingAnalysisCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: TextractClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    StartLendingAnalysisCommandInput,
    StartLendingAnalysisCommandOutput
  >;
  private serialize;
  private deserialize;
}
