import {
  ExceptionOptionType as __ExceptionOptionType,
  LazyJsonString as __LazyJsonString,
} from "@smithy/smithy-client";
import { TextractServiceException as __BaseException } from "./TextractServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface Adapter {
  AdapterId: string | undefined;
  Pages?: string[];
  Version: string | undefined;
}
export declare const FeatureType: {
  readonly FORMS: "FORMS";
  readonly LAYOUT: "LAYOUT";
  readonly QUERIES: "QUERIES";
  readonly SIGNATURES: "SIGNATURES";
  readonly TABLES: "TABLES";
};
export type FeatureType = (typeof FeatureType)[keyof typeof FeatureType];
export interface AdapterOverview {
  AdapterId?: string;
  AdapterName?: string;
  CreationTime?: Date;
  FeatureTypes?: FeatureType[];
}
export interface AdaptersConfig {
  Adapters: Adapter[] | undefined;
}
export interface S3Object {
  Bucket?: string;
  Name?: string;
  Version?: string;
}
export interface AdapterVersionDatasetConfig {
  ManifestS3Object?: S3Object;
}
export interface EvaluationMetric {
  F1Score?: number;
  Precision?: number;
  Recall?: number;
}
export interface AdapterVersionEvaluationMetric {
  Baseline?: EvaluationMetric;
  AdapterVersion?: EvaluationMetric;
  FeatureType?: FeatureType;
}
export declare const AdapterVersionStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly AT_RISK: "AT_RISK";
  readonly CREATION_ERROR: "CREATION_ERROR";
  readonly CREATION_IN_PROGRESS: "CREATION_IN_PROGRESS";
  readonly DEPRECATED: "DEPRECATED";
};
export type AdapterVersionStatus =
  (typeof AdapterVersionStatus)[keyof typeof AdapterVersionStatus];
export interface AdapterVersionOverview {
  AdapterId?: string;
  AdapterVersion?: string;
  CreationTime?: Date;
  FeatureTypes?: FeatureType[];
  Status?: AdapterVersionStatus;
  StatusMessage?: string;
}
export interface Document {
  Bytes?: Uint8Array;
  S3Object?: S3Object;
}
export declare const ContentClassifier: {
  readonly FREE_OF_ADULT_CONTENT: "FreeOfAdultContent";
  readonly FREE_OF_PERSONALLY_IDENTIFIABLE_INFORMATION: "FreeOfPersonallyIdentifiableInformation";
};
export type ContentClassifier =
  (typeof ContentClassifier)[keyof typeof ContentClassifier];
export interface HumanLoopDataAttributes {
  ContentClassifiers?: ContentClassifier[];
}
export interface HumanLoopConfig {
  HumanLoopName: string | undefined;
  FlowDefinitionArn: string | undefined;
  DataAttributes?: HumanLoopDataAttributes;
}
export interface Query {
  Text: string | undefined;
  Alias?: string;
  Pages?: string[];
}
export interface QueriesConfig {
  Queries: Query[] | undefined;
}
export interface AnalyzeDocumentRequest {
  Document: Document | undefined;
  FeatureTypes: FeatureType[] | undefined;
  HumanLoopConfig?: HumanLoopConfig;
  QueriesConfig?: QueriesConfig;
  AdaptersConfig?: AdaptersConfig;
}
export declare const BlockType: {
  readonly CELL: "CELL";
  readonly KEY_VALUE_SET: "KEY_VALUE_SET";
  readonly LAYOUT_FIGURE: "LAYOUT_FIGURE";
  readonly LAYOUT_FOOTER: "LAYOUT_FOOTER";
  readonly LAYOUT_HEADER: "LAYOUT_HEADER";
  readonly LAYOUT_KEY_VALUE: "LAYOUT_KEY_VALUE";
  readonly LAYOUT_LIST: "LAYOUT_LIST";
  readonly LAYOUT_PAGE_NUMBER: "LAYOUT_PAGE_NUMBER";
  readonly LAYOUT_SECTION_HEADER: "LAYOUT_SECTION_HEADER";
  readonly LAYOUT_TABLE: "LAYOUT_TABLE";
  readonly LAYOUT_TEXT: "LAYOUT_TEXT";
  readonly LAYOUT_TITLE: "LAYOUT_TITLE";
  readonly LINE: "LINE";
  readonly MERGED_CELL: "MERGED_CELL";
  readonly PAGE: "PAGE";
  readonly QUERY: "QUERY";
  readonly QUERY_RESULT: "QUERY_RESULT";
  readonly SELECTION_ELEMENT: "SELECTION_ELEMENT";
  readonly SIGNATURE: "SIGNATURE";
  readonly TABLE: "TABLE";
  readonly TABLE_FOOTER: "TABLE_FOOTER";
  readonly TABLE_TITLE: "TABLE_TITLE";
  readonly TITLE: "TITLE";
  readonly WORD: "WORD";
};
export type BlockType = (typeof BlockType)[keyof typeof BlockType];
export declare const EntityType: {
  readonly COLUMN_HEADER: "COLUMN_HEADER";
  readonly KEY: "KEY";
  readonly SEMI_STRUCTURED_TABLE: "SEMI_STRUCTURED_TABLE";
  readonly STRUCTURED_TABLE: "STRUCTURED_TABLE";
  readonly TABLE_FOOTER: "TABLE_FOOTER";
  readonly TABLE_SECTION_TITLE: "TABLE_SECTION_TITLE";
  readonly TABLE_SUMMARY: "TABLE_SUMMARY";
  readonly TABLE_TITLE: "TABLE_TITLE";
  readonly VALUE: "VALUE";
};
export type EntityType = (typeof EntityType)[keyof typeof EntityType];
export interface BoundingBox {
  Width?: number;
  Height?: number;
  Left?: number;
  Top?: number;
}
export interface Point {
  X?: number;
  Y?: number;
}
export interface Geometry {
  BoundingBox?: BoundingBox;
  Polygon?: Point[];
}
export declare const RelationshipType: {
  readonly ANSWER: "ANSWER";
  readonly CHILD: "CHILD";
  readonly COMPLEX_FEATURES: "COMPLEX_FEATURES";
  readonly MERGED_CELL: "MERGED_CELL";
  readonly TABLE: "TABLE";
  readonly TABLE_FOOTER: "TABLE_FOOTER";
  readonly TABLE_TITLE: "TABLE_TITLE";
  readonly TITLE: "TITLE";
  readonly VALUE: "VALUE";
};
export type RelationshipType =
  (typeof RelationshipType)[keyof typeof RelationshipType];
export interface Relationship {
  Type?: RelationshipType;
  Ids?: string[];
}
export declare const SelectionStatus: {
  readonly NOT_SELECTED: "NOT_SELECTED";
  readonly SELECTED: "SELECTED";
};
export type SelectionStatus =
  (typeof SelectionStatus)[keyof typeof SelectionStatus];
export declare const TextType: {
  readonly HANDWRITING: "HANDWRITING";
  readonly PRINTED: "PRINTED";
};
export type TextType = (typeof TextType)[keyof typeof TextType];
export interface Block {
  BlockType?: BlockType;
  Confidence?: number;
  Text?: string;
  TextType?: TextType;
  RowIndex?: number;
  ColumnIndex?: number;
  RowSpan?: number;
  ColumnSpan?: number;
  Geometry?: Geometry;
  Id?: string;
  Relationships?: Relationship[];
  EntityTypes?: EntityType[];
  SelectionStatus?: SelectionStatus;
  Page?: number;
  Query?: Query;
}
export interface DocumentMetadata {
  Pages?: number;
}
export interface HumanLoopActivationOutput {
  HumanLoopArn?: string;
  HumanLoopActivationReasons?: string[];
  HumanLoopActivationConditionsEvaluationResults?: __LazyJsonString | string;
}
export interface AnalyzeDocumentResponse {
  DocumentMetadata?: DocumentMetadata;
  Blocks?: Block[];
  HumanLoopActivationOutput?: HumanLoopActivationOutput;
  AnalyzeDocumentModelVersion?: string;
}
export declare class BadDocumentException extends __BaseException {
  readonly name: "BadDocumentException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<BadDocumentException, __BaseException>
  );
}
export declare class DocumentTooLargeException extends __BaseException {
  readonly name: "DocumentTooLargeException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<DocumentTooLargeException, __BaseException>
  );
}
export declare class HumanLoopQuotaExceededException extends __BaseException {
  readonly name: "HumanLoopQuotaExceededException";
  readonly $fault: "client";
  ResourceType?: string;
  QuotaCode?: string;
  ServiceCode?: string;
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<
      HumanLoopQuotaExceededException,
      __BaseException
    >
  );
}
export declare class InternalServerError extends __BaseException {
  readonly name: "InternalServerError";
  readonly $fault: "server";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerError, __BaseException>
  );
}
export declare class InvalidParameterException extends __BaseException {
  readonly name: "InvalidParameterException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidParameterException, __BaseException>
  );
}
export declare class InvalidS3ObjectException extends __BaseException {
  readonly name: "InvalidS3ObjectException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidS3ObjectException, __BaseException>
  );
}
export declare class ProvisionedThroughputExceededException extends __BaseException {
  readonly name: "ProvisionedThroughputExceededException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<
      ProvisionedThroughputExceededException,
      __BaseException
    >
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "server";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class UnsupportedDocumentException extends __BaseException {
  readonly name: "UnsupportedDocumentException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<UnsupportedDocumentException, __BaseException>
  );
}
export interface AnalyzeExpenseRequest {
  Document: Document | undefined;
}
export interface ExpenseCurrency {
  Code?: string;
  Confidence?: number;
}
export interface ExpenseGroupProperty {
  Types?: string[];
  Id?: string;
}
export interface ExpenseDetection {
  Text?: string;
  Geometry?: Geometry;
  Confidence?: number;
}
export interface ExpenseType {
  Text?: string;
  Confidence?: number;
}
export interface ExpenseField {
  Type?: ExpenseType;
  LabelDetection?: ExpenseDetection;
  ValueDetection?: ExpenseDetection;
  PageNumber?: number;
  Currency?: ExpenseCurrency;
  GroupProperties?: ExpenseGroupProperty[];
}
export interface LineItemFields {
  LineItemExpenseFields?: ExpenseField[];
}
export interface LineItemGroup {
  LineItemGroupIndex?: number;
  LineItems?: LineItemFields[];
}
export interface ExpenseDocument {
  ExpenseIndex?: number;
  SummaryFields?: ExpenseField[];
  LineItemGroups?: LineItemGroup[];
  Blocks?: Block[];
}
export interface AnalyzeExpenseResponse {
  DocumentMetadata?: DocumentMetadata;
  ExpenseDocuments?: ExpenseDocument[];
}
export interface AnalyzeIDRequest {
  DocumentPages: Document[] | undefined;
}
export declare const ValueType: {
  readonly DATE: "DATE";
};
export type ValueType = (typeof ValueType)[keyof typeof ValueType];
export interface NormalizedValue {
  Value?: string;
  ValueType?: ValueType;
}
export interface AnalyzeIDDetections {
  Text: string | undefined;
  NormalizedValue?: NormalizedValue;
  Confidence?: number;
}
export interface IdentityDocumentField {
  Type?: AnalyzeIDDetections;
  ValueDetection?: AnalyzeIDDetections;
}
export interface IdentityDocument {
  DocumentIndex?: number;
  IdentityDocumentFields?: IdentityDocumentField[];
  Blocks?: Block[];
}
export interface AnalyzeIDResponse {
  IdentityDocuments?: IdentityDocument[];
  DocumentMetadata?: DocumentMetadata;
  AnalyzeIDModelVersion?: string;
}
export declare const AutoUpdate: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type AutoUpdate = (typeof AutoUpdate)[keyof typeof AutoUpdate];
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface CreateAdapterRequest {
  AdapterName: string | undefined;
  ClientRequestToken?: string;
  Description?: string;
  FeatureTypes: FeatureType[] | undefined;
  AutoUpdate?: AutoUpdate;
  Tags?: Record<string, string>;
}
export interface CreateAdapterResponse {
  AdapterId?: string;
}
export declare class IdempotentParameterMismatchException extends __BaseException {
  readonly name: "IdempotentParameterMismatchException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<
      IdempotentParameterMismatchException,
      __BaseException
    >
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface OutputConfig {
  S3Bucket: string | undefined;
  S3Prefix?: string;
}
export interface CreateAdapterVersionRequest {
  AdapterId: string | undefined;
  ClientRequestToken?: string;
  DatasetConfig: AdapterVersionDatasetConfig | undefined;
  KMSKeyId?: string;
  OutputConfig: OutputConfig | undefined;
  Tags?: Record<string, string>;
}
export interface CreateAdapterVersionResponse {
  AdapterId?: string;
  AdapterVersion?: string;
}
export declare class InvalidKMSKeyException extends __BaseException {
  readonly name: "InvalidKMSKeyException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidKMSKeyException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface DeleteAdapterRequest {
  AdapterId: string | undefined;
}
export interface DeleteAdapterResponse {}
export interface DeleteAdapterVersionRequest {
  AdapterId: string | undefined;
  AdapterVersion: string | undefined;
}
export interface DeleteAdapterVersionResponse {}
export interface DetectDocumentTextRequest {
  Document: Document | undefined;
}
export interface DetectDocumentTextResponse {
  DocumentMetadata?: DocumentMetadata;
  Blocks?: Block[];
  DetectDocumentTextModelVersion?: string;
}
export interface DetectedSignature {
  Page?: number;
}
export interface SplitDocument {
  Index?: number;
  Pages?: number[];
}
export interface UndetectedSignature {
  Page?: number;
}
export interface DocumentGroup {
  Type?: string;
  SplitDocuments?: SplitDocument[];
  DetectedSignatures?: DetectedSignature[];
  UndetectedSignatures?: UndetectedSignature[];
}
export interface DocumentLocation {
  S3Object?: S3Object;
}
export interface LendingDetection {
  Text?: string;
  SelectionStatus?: SelectionStatus;
  Geometry?: Geometry;
  Confidence?: number;
}
export interface LendingField {
  Type?: string;
  KeyDetection?: LendingDetection;
  ValueDetections?: LendingDetection[];
}
export interface SignatureDetection {
  Confidence?: number;
  Geometry?: Geometry;
}
export interface LendingDocument {
  LendingFields?: LendingField[];
  SignatureDetections?: SignatureDetection[];
}
export interface Extraction {
  LendingDocument?: LendingDocument;
  ExpenseDocument?: ExpenseDocument;
  IdentityDocument?: IdentityDocument;
}
export interface GetAdapterRequest {
  AdapterId: string | undefined;
}
export interface GetAdapterResponse {
  AdapterId?: string;
  AdapterName?: string;
  CreationTime?: Date;
  Description?: string;
  FeatureTypes?: FeatureType[];
  AutoUpdate?: AutoUpdate;
  Tags?: Record<string, string>;
}
export interface GetAdapterVersionRequest {
  AdapterId: string | undefined;
  AdapterVersion: string | undefined;
}
export interface GetAdapterVersionResponse {
  AdapterId?: string;
  AdapterVersion?: string;
  CreationTime?: Date;
  FeatureTypes?: FeatureType[];
  Status?: AdapterVersionStatus;
  StatusMessage?: string;
  DatasetConfig?: AdapterVersionDatasetConfig;
  KMSKeyId?: string;
  OutputConfig?: OutputConfig;
  EvaluationMetrics?: AdapterVersionEvaluationMetric[];
  Tags?: Record<string, string>;
}
export interface GetDocumentAnalysisRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export declare const JobStatus: {
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PARTIAL_SUCCESS: "PARTIAL_SUCCESS";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus];
export interface Warning {
  ErrorCode?: string;
  Pages?: number[];
}
export interface GetDocumentAnalysisResponse {
  DocumentMetadata?: DocumentMetadata;
  JobStatus?: JobStatus;
  NextToken?: string;
  Blocks?: Block[];
  Warnings?: Warning[];
  StatusMessage?: string;
  AnalyzeDocumentModelVersion?: string;
}
export declare class InvalidJobIdException extends __BaseException {
  readonly name: "InvalidJobIdException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidJobIdException, __BaseException>
  );
}
export interface GetDocumentTextDetectionRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface GetDocumentTextDetectionResponse {
  DocumentMetadata?: DocumentMetadata;
  JobStatus?: JobStatus;
  NextToken?: string;
  Blocks?: Block[];
  Warnings?: Warning[];
  StatusMessage?: string;
  DetectDocumentTextModelVersion?: string;
}
export interface GetExpenseAnalysisRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface GetExpenseAnalysisResponse {
  DocumentMetadata?: DocumentMetadata;
  JobStatus?: JobStatus;
  NextToken?: string;
  ExpenseDocuments?: ExpenseDocument[];
  Warnings?: Warning[];
  StatusMessage?: string;
  AnalyzeExpenseModelVersion?: string;
}
export interface GetLendingAnalysisRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface Prediction {
  Value?: string;
  Confidence?: number;
}
export interface PageClassification {
  PageType: Prediction[] | undefined;
  PageNumber: Prediction[] | undefined;
}
export interface LendingResult {
  Page?: number;
  PageClassification?: PageClassification;
  Extractions?: Extraction[];
}
export interface GetLendingAnalysisResponse {
  DocumentMetadata?: DocumentMetadata;
  JobStatus?: JobStatus;
  NextToken?: string;
  Results?: LendingResult[];
  Warnings?: Warning[];
  StatusMessage?: string;
  AnalyzeLendingModelVersion?: string;
}
export interface GetLendingAnalysisSummaryRequest {
  JobId: string | undefined;
}
export interface LendingSummary {
  DocumentGroups?: DocumentGroup[];
  UndetectedDocumentTypes?: string[];
}
export interface GetLendingAnalysisSummaryResponse {
  DocumentMetadata?: DocumentMetadata;
  JobStatus?: JobStatus;
  Summary?: LendingSummary;
  Warnings?: Warning[];
  StatusMessage?: string;
  AnalyzeLendingModelVersion?: string;
}
export interface ListAdaptersRequest {
  AfterCreationTime?: Date;
  BeforeCreationTime?: Date;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListAdaptersResponse {
  Adapters?: AdapterOverview[];
  NextToken?: string;
}
export interface ListAdapterVersionsRequest {
  AdapterId?: string;
  AfterCreationTime?: Date;
  BeforeCreationTime?: Date;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListAdapterVersionsResponse {
  AdapterVersions?: AdapterVersionOverview[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceARN: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface NotificationChannel {
  SNSTopicArn: string | undefined;
  RoleArn: string | undefined;
}
export interface StartDocumentAnalysisRequest {
  DocumentLocation: DocumentLocation | undefined;
  FeatureTypes: FeatureType[] | undefined;
  ClientRequestToken?: string;
  JobTag?: string;
  NotificationChannel?: NotificationChannel;
  OutputConfig?: OutputConfig;
  KMSKeyId?: string;
  QueriesConfig?: QueriesConfig;
  AdaptersConfig?: AdaptersConfig;
}
export interface StartDocumentAnalysisResponse {
  JobId?: string;
}
export interface StartDocumentTextDetectionRequest {
  DocumentLocation: DocumentLocation | undefined;
  ClientRequestToken?: string;
  JobTag?: string;
  NotificationChannel?: NotificationChannel;
  OutputConfig?: OutputConfig;
  KMSKeyId?: string;
}
export interface StartDocumentTextDetectionResponse {
  JobId?: string;
}
export interface StartExpenseAnalysisRequest {
  DocumentLocation: DocumentLocation | undefined;
  ClientRequestToken?: string;
  JobTag?: string;
  NotificationChannel?: NotificationChannel;
  OutputConfig?: OutputConfig;
  KMSKeyId?: string;
}
export interface StartExpenseAnalysisResponse {
  JobId?: string;
}
export interface StartLendingAnalysisRequest {
  DocumentLocation: DocumentLocation | undefined;
  ClientRequestToken?: string;
  JobTag?: string;
  NotificationChannel?: NotificationChannel;
  OutputConfig?: OutputConfig;
  KMSKeyId?: string;
}
export interface StartLendingAnalysisResponse {
  JobId?: string;
}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateAdapterRequest {
  AdapterId: string | undefined;
  Description?: string;
  AdapterName?: string;
  AutoUpdate?: AutoUpdate;
}
export interface UpdateAdapterResponse {
  AdapterId?: string;
  AdapterName?: string;
  CreationTime?: Date;
  Description?: string;
  FeatureTypes?: FeatureType[];
  AutoUpdate?: AutoUpdate;
}
